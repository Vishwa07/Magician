/*#include "HttpServer.hpp"

int main()
{

HttpServer *ser = new HttpServer();
ser->PrintHelloWorld();
return 0;
}*/


#include <boost/network/protocol/http/server.hpp>
#include <string>
#include <iostream>
using namespace std;
namespace http = boost::network::http;

struct hello_world;
typedef http::server<hello_world> server;

struct hello_world {
    void operator() (server::request const &request,
                     server::response &response) {
        std::string ip = source(request);
        //std::cout<<"request method:"<< method(request) << "\n" ;//<<request.body <<"\n" << request.destination;
        response = server::response::stock_reply(
            server::response::ok, std::string("Hello, ") + ip + "!");
    }
    void log(const char* errCode)
    {
      std::cerr<<"Error code:"<<errCode << "\n";
    }


};

int
main(int argc, char * argv[]) {

    if (argc != 3) {
        std::cerr << "Usage: " << argv[0] << " address port" << std::endl;
        return 1;
    }

    try {
        hello_world handler;
        server server_(argv[1], argv[2], handler);
        server_.run();
    }
    catch (std::exception &e) {
        std::cerr << e.what() << std::endl;
        return 1;
    }

    return 0;
}
